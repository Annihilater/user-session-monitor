name: Release

on:
  push:
    tags:
      - "v*" # 当推送 v 开头的 tag 时触发，如 v1.0.0

permissions:
  contents: write # 用于创建 release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整的 git 历史用于生成 changelog

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: true

      - name: Generate Changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            git log --pretty=format:"* %s (%h)" > CHANGELOG.md
          else
            git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD > CHANGELOG.md
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build for multiple platforms
        run: |
          # Linux (amd64)
          GOOS=linux GOARCH=amd64 go build -o user-session-monitor-linux-amd64 ./cmd/monitor
          # Linux (arm64)
          GOOS=linux GOARCH=arm64 go build -o user-session-monitor-linux-arm64 ./cmd/monitor
          # 压缩二进制文件
          tar czf user-session-monitor-linux-amd64.tar.gz user-session-monitor-linux-amd64
          tar czf user-session-monitor-linux-arm64.tar.gz user-session-monitor-linux-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## 更新日志
            ${{ steps.changelog.outputs.changelog }}

            ## 安装说明
            1. 下载对应平台的压缩包
            2. 解压获取二进制文件
            3. 参考 README.md 进行配置和安装
          files: |
            user-session-monitor-linux-amd64.tar.gz
            user-session-monitor-linux-arm64.tar.gz
          draft: false
          prerelease: false
